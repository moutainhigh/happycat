<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
	xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- 基于注解的MVC配置 -->
	<!-- <mvc:annotation-driven />

	<context:property-placeholder location="classpath:*.properties" order="3" /> -->
	<!-- 将隐式地向 Spring 容器注册 AutowiredAnnotationBeanPostProcessor、 CommonAnnotationBeanPostProcessor、 
		PersistenceAnnotationBeanPostProcessor 以及 RequiredAnnotationBeanPostProcessor 
		这 4 个 BeanPostProcessor。 -->
	<context:annotation-config />

	

	<!-- Spring Filter Chain -->
	<bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
		<sec:filter-chain-map path-type="ant">
			<sec:filter-chain pattern="/payment/backend/api/common/**" filters="requestClearFilter"/>
		    <sec:filter-chain pattern="/wap/api/security/ttb/pay/json" filters="authenticationCommonFilter,logMonitorFilter,singleSignOutFilter,casAuthenticationFilterForMobile,casValidationFilter,
         		casHttpServletRequestWrapperFilter,casAssertionThreadLocalFilter"/>
			<sec:filter-chain pattern="/security/ttb/pay/json" filters="authenticationCommonFilter,logMonitorFilter,singleSignOutFilter,casAuthenticationFilterForMobile,casValidationFilter,
         		casHttpServletRequestWrapperFilter,casAssertionThreadLocalFilter"/>
			<sec:filter-chain pattern="/api/tgt/ttb/pay/json" filters="authenticationCommonFilter,logMonitorFilter"/>
		
			<sec:filter-chain pattern="/security/ttb/pay" filters="authenticationCommonFilter,logMonitorFilter,singleSignOutFilter,casAuthenticationFilter,casValidationFilter,
         		casHttpServletRequestWrapperFilter,casAssertionThreadLocalFilter"/>
         	
         	<sec:filter-chain pattern="/tutu/pay/success" filters="logMonitorFilter,singleSignOutFilter,casAuthenticationFilter,casValidationFilter,
         		casHttpServletRequestWrapperFilter,casAssertionThreadLocalFilter"/>
			<!-- sso -->
			<sec:filter-chain pattern="/m/sso/**" filters="singleSignOutFilter,casAuthenticationFilterForMobile,casValidationFilter,
	         	casHttpServletRequestWrapperFilter,casAssertionThreadLocalFilter"/>
	        <sec:filter-chain pattern="/sso/**" filters="singleSignOutFilter,casAuthenticationFilter,casValidationFilter,
	         	casHttpServletRequestWrapperFilter,casAssertionThreadLocalFilter"/>
         	<sec:filter-chain pattern="/security/**" filters="singleSignOutFilter,casAuthenticationFilter,casValidationFilter,
         		casHttpServletRequestWrapperFilter,casAssertionThreadLocalFilter,logMonitorFilter"/>
	         	
			<!-- 不需要SSO拦截的URL地址配置 fiters="none" -->
			<sec:filter-chain pattern="/**/*.js" filters="none" />
			<sec:filter-chain pattern="/**/*.css" filters="none" />
			<sec:filter-chain pattern="/" filters="none" />
			<sec:filter-chain pattern="/favicon.ico" filters="none" />
			<sec:filter-chain pattern="/crossdomain.xml" filters="none" />
			
			<sec:filter-chain pattern="/payment/backend/**" filters="none" /><!-- 后台回调地址 -->
			<sec:filter-chain pattern="/payment/front/**" filters="none" /><!-- 前台回调地址 -->
			<sec:filter-chain pattern="/payment/api/dp/json" filters="authenticationCommonFilter,logMonitorFilter"/>
			
			<sec:filter-chain pattern="/payment/api/jsonp" filters="authenticationCommonFilter,logMonitorFilter"/>
			
			
			<!-- wap兔兔币、微信、支付宝、银联、银行卡、手机充值卡、蜗牛充值卡、游戏充值卡使用通用过滤器 -->
			<sec:filter-chain pattern="/wap/api/**" filters="authenticationCommonFilter,logMonitorFilter"/>
			
			<sec:filter-chain pattern="/payment/api" filters="authenticationCommonFilter,logMonitorFilter"/>
			<sec:filter-chain pattern="/payment/api/**" filters="authenticationCommonFilter,logMonitorFilter"/>
			<sec:filter-chain pattern="/cancel/api/json"  filters= "authenticationCommonFilter,logMonitorFilter"/>
			
			<sec:filter-chain pattern="/fcb/pay" filters="authenticationCommonFilter,logMonitorFilter"/>
			<sec:filter-chain pattern="/fcb/pay/**" filters="authenticationCommonFilter,logMonitorFilter"/>
	
	
	        <sec:filter-chain pattern="/api/excharge/order/**" filters="authenticationCommonFilter,logMonitorFilter"/>
	        <sec:filter-chain pattern="/payment/trans/**"  filters= "authenticationCommonFilter,logMonitorFilter"/>
	        
	        <!-- 退款 -->
	        <sec:filter-chain pattern="/api/refundment/refund/**"  filters= "authenticationCommonFilter,logMonitorFilter"/>
	        
	        <!-- cache -->
	        <sec:filter-chain pattern="/cache/**" filters="none"/>
	        <sec:filter-chain pattern="/robots.txt" filters="none"/>

		</sec:filter-chain-map>
	</bean>

	 
	<!-- <bean id="authenticationFilter" class="com.woniu.pay.web.filter.AuthenticationFilter"/> -->
	<!-- PC,wap,app通用 -->
	<bean id="authenticationCommonFilter" class="com.woniu.sncp.pay.core.filter.AuthenticationCommonFilter"/>
	<bean id="logMonitorFilter" class="com.woniu.sncp.pay.core.filter.LogMonitorFilter"/>
	<!-- 清空requestBody -->
	<bean id="requestClearFilter" class="com.woniu.sncp.pay.core.filter.RequestClearFilter"/>
	
    <!-- Cas Authentication Filter -->
    <!-- <bean id="casAuthenticationFilter" class="org.jasig.cas.client.authentication.AuthenticationFilter">
        <property name="casServerLoginUrl" value="https://sso.woniu.com/login"/>
        <property name="serverName" value="http://cashier.woniu.com"/>
    </bean>
    
    <bean id="casAuthenticationFilterForMobile" class="org.jasig.cas.client.authentication.AuthenticationFilter">
        <property name="casServerLoginUrl" value="https://sso.woniu.com/m/login"/>
        <property name="serverName" value="http://cashier.woniu.com"/>
    </bean>
    
    <bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator" id="ticketValidator">
        <constructor-arg index="0" value="https://sso.woniu.com"/>
    </bean>

    CAS Ticket Validation Filter
    <bean id="casValidationFilter" class="org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter">
        <property name="serverName" value="http://cashier.woniu.com"/>
        <property name="exceptionOnValidationFailure" value="true"/>
        <property name="redirectAfterValidation" value="true"/>
        <property name="ticketValidator" ref="ticketValidator"/>
    </bean>
    
    CAS HttpServletRequest Wrapper Filter
    <bean id="casHttpServletRequestWrapperFilter" class="org.jasig.cas.client.util.HttpServletRequestWrapperFilter"/>

    CAS Assertion Thread Local Filter
    <bean id="casAssertionThreadLocalFilter" class="org.jasig.cas.client.util.AssertionThreadLocalFilter"/>

    CAS Single Sign Out 
    <bean id="singleSignOutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>
    
	线程池配置
    <bean id="threadPool" class="com.woniu.sncp.pay.common.threadpool.ThreadPool">
        <property name="corePoolSize" value="5"></property>
        <property name="maximumPoolSize" value="50"></property>
        <property name="keepAliveTime" value="8"></property>
        <property name="blockingQueueNum" value="20" />
    </bean> -->
</beans>